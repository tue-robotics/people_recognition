#!/usr/bin/env python
import argparse

import cv2
import rospy
from cv_bridge import CvBridge
from people_recognition_msgs.srv import RecognizePeople2D, RecognizePeople2DRequest

parser = argparse.ArgumentParser(description="Get 2D people recognition")
parser.add_argument("-v", "--verbose", help="Increase output verbosity", action="store_true")
parser.add_argument("-s", "--service_name", help="Service name", required=True)

mode_parser = parser.add_subparsers(help="Mode")
image_parser = mode_parser.add_parser("image", help="Use image mode")
image_parser.set_defaults(mode="image")
image_parser.add_argument("image", help="Input image")

cam_parser = mode_parser.add_parser("cam", help="Use cam mode")
cam_parser.set_defaults(mode="cam")
cam_parser.add_argument("--rate", default=3.0, type=float, help="Input image")

args = parser.parse_args()

rospy.init_node("people_recognition_2d_srv_test")

srv = rospy.ServiceProxy(args.service_name, RecognizePeople2D)
rospy.loginfo("Waiting for service {} ...".format(srv.resolved_name))
srv.wait_for_service()

cv_bridge = CvBridge()

if args.mode == "image":
    image = cv2.imread(args.image)
    img_msg = cv_bridge.cv2_to_imgmsg(image, "bgr8")

    for i in range(0, 2):
        resp = srv(RecognizePeople2DRequest(image=img_msg))
        rospy.loginfo("Iteration: {}".format(i))

elif args.mode == "cam":
    print("Nothing to be done. Bye Bye.")
